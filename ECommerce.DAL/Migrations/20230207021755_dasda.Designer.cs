// <auto-generated />
using System;
using ECommerce.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerce.DAL.Migrations
{
    [DbContext(typeof(ECommerceContext))]
    [Migration("20230207021755_dasda")]
    partial class dasda
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ECommerce.Entity.AppUser", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique()
                        .HasFilter("[CardId] IS NOT NULL");

                    b.HasIndex("SellerId");

                    b.ToTable("AppUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "adress",
                            CardId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(5872),
                            Email = "email",
                            IsDeleted = false,
                            Name = "dasd",
                            Password = "1",
                            SellerId = 1,
                            SurName = "dasdas"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Card", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6751),
                            Discount = 15,
                            IsDeleted = false,
                            TotalPrice = 2000.0
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.CardItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CardId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("RemoveCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.HasIndex("ProductId");

                    b.ToTable("CardItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 12.0,
                            CardId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6900),
                            IsDeleted = false,
                            ProductId = 1,
                            Quantity = 2,
                            RemoveCount = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 12.0,
                            CardId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6903),
                            IsDeleted = false,
                            ProductId = 2,
                            Quantity = 3,
                            RemoveCount = 2
                        },
                        new
                        {
                            Id = 3,
                            Amount = 12.0,
                            CardId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6905),
                            IsDeleted = false,
                            ProductId = 3,
                            Quantity = 1,
                            RemoveCount = 2
                        },
                        new
                        {
                            Id = 4,
                            Amount = 12.0,
                            CardId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6906),
                            IsDeleted = false,
                            ProductId = 4,
                            Quantity = 4,
                            RemoveCount = 2
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Category", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ImageId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageId")
                        .IsUnique()
                        .HasFilter("[ImageId] IS NOT NULL");

                    b.HasIndex("SellerId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6283),
                            IsDeleted = false,
                            Name = "cat1",
                            SellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6286),
                            IsDeleted = false,
                            Name = "cat2",
                            SellerId = 1
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Image", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Base64Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("ECommerce.Entity.Order", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConversationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.Property<string>("PaymentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<double>("ShippingPrice")
                        .HasColumnType("float");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("SellerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7073),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 6, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7075),
                            OrderNumber = "A5845DS1",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2520.0
                        },
                        new
                        {
                            Id = 2,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7096),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 5, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7097),
                            OrderNumber = "A5845DS2",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2120.0
                        },
                        new
                        {
                            Id = 3,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7100),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 4, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7101),
                            OrderNumber = "A5845DS3",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 220.0
                        },
                        new
                        {
                            Id = 4,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7103),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 3, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7103),
                            OrderNumber = "A5845DS4",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 4520.0
                        },
                        new
                        {
                            Id = 5,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7106),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 6, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7106),
                            OrderNumber = "A5845DS5",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2820.0
                        },
                        new
                        {
                            Id = 6,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7110),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 5, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7111),
                            OrderNumber = "A5845DS6",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2520.0
                        },
                        new
                        {
                            Id = 7,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7113),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 4, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7113),
                            OrderNumber = "A5845DS7",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 28820.0
                        },
                        new
                        {
                            Id = 8,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7116),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 3, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7116),
                            OrderNumber = "A5845DS8",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 1220.0
                        },
                        new
                        {
                            Id = 9,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7118),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 6, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7119),
                            OrderNumber = "A5845DS9",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 5820.0
                        },
                        new
                        {
                            Id = 10,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7122),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 5, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7123),
                            OrderNumber = "A5845DS0",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 20.0
                        },
                        new
                        {
                            Id = 11,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7151),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 4, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7152),
                            OrderNumber = "A5845DS1",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2520.0
                        },
                        new
                        {
                            Id = 12,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7154),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 3, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7155),
                            OrderNumber = "A5845DS2",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 8520.0
                        },
                        new
                        {
                            Id = 13,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7157),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 6, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7158),
                            OrderNumber = "A5845DS3",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2520.0
                        },
                        new
                        {
                            Id = 14,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7160),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 5, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7160),
                            OrderNumber = "A5845DS4",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 22520.0
                        },
                        new
                        {
                            Id = 15,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7163),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 4, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7163),
                            OrderNumber = "A5845DS5",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2820.0
                        },
                        new
                        {
                            Id = 16,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7166),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 3, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7167),
                            OrderNumber = "A5845DS6",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 250.0
                        },
                        new
                        {
                            Id = 17,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7169),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 6, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7170),
                            OrderNumber = "A5845DS7",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 25250.0
                        },
                        new
                        {
                            Id = 18,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7173),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 5, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7173),
                            OrderNumber = "A5845DS8",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2250.0
                        },
                        new
                        {
                            Id = 19,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7175),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 4, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7176),
                            OrderNumber = "A5845DS9",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2250.0
                        },
                        new
                        {
                            Id = 20,
                            Address = "dsadasda",
                            AppUserId = 1,
                            City = "ankara",
                            ConversationId = "5",
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7178),
                            Discount = 20,
                            Email = "sdadas@dasdsa.com",
                            FirstName = "dasdasdas",
                            IsDeleted = false,
                            LastName = "sdadasda",
                            Note = "dsadasdas",
                            OrderDate = new DateTime(2023, 2, 2, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(7179),
                            OrderNumber = "A5845DS0",
                            OrderStatus = 1,
                            PaymentId = "1",
                            Phone = "+9055512548",
                            SellerId = 1,
                            ShippingPrice = 25.0,
                            TotalPrice = 2250.0
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.OrderItem", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductDiscount")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("ProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Product", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsHomeProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStock")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTop")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double?>("Ratings")
                        .HasColumnType("float");

                    b.Property<int?>("RemoveCount")
                        .HasColumnType("int");

                    b.Property<double?>("SalePrice")
                        .HasColumnType("float");

                    b.Property<int?>("SalesQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("StockCount")
                        .HasColumnType("int");

                    b.Property<int?>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SellerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6052),
                            Description = "prodcu1",
                            Discount = 15,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product1",
                            Price = 2000.0,
                            Ratings = 4.2000000000000002,
                            RemoveCount = 2,
                            SalePrice = 1800.0,
                            SalesQuantity = 5,
                            SellerId = 1,
                            StockCount = 2
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6065),
                            Description = "prodcu2",
                            Discount = 20,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product2",
                            Price = 5000.0,
                            Ratings = 3.2000000000000002,
                            RemoveCount = 12,
                            SalePrice = 1800.0,
                            SalesQuantity = 5,
                            SellerId = 1,
                            StockCount = 25
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6069),
                            Description = "prodcu3",
                            Discount = 0,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product3",
                            Price = 6000.0,
                            Ratings = 5.2000000000000002,
                            RemoveCount = 10,
                            SalePrice = 1800.0,
                            SalesQuantity = 100,
                            SellerId = 1,
                            StockCount = 100
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6073),
                            Description = "prodcu4",
                            Discount = 0,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product4",
                            Price = 2800.0,
                            Ratings = 9.1999999999999993,
                            RemoveCount = 15,
                            SalePrice = 1800.0,
                            SalesQuantity = 21,
                            SellerId = 1,
                            StockCount = 15
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6075),
                            Description = "prodcu5",
                            Discount = 15,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product5",
                            Price = 4500.0,
                            Ratings = 6.2000000000000002,
                            RemoveCount = 2,
                            SalePrice = 1800.0,
                            SalesQuantity = 25,
                            SellerId = 1,
                            StockCount = 10
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6080),
                            Description = "prodcu6",
                            Discount = 25,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product6",
                            Price = 22500.0,
                            Ratings = 2.2000000000000002,
                            RemoveCount = 3,
                            SalePrice = 1800.0,
                            SalesQuantity = 1100,
                            SellerId = 1,
                            StockCount = 9
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6083),
                            Description = "prodcu7",
                            Discount = 40,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product7",
                            Price = 2200.0,
                            Ratings = 5.2000000000000002,
                            RemoveCount = 5,
                            SalePrice = 1800.0,
                            SalesQuantity = 60,
                            SellerId = 1,
                            StockCount = 65
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6085),
                            Description = "prodcu8",
                            Discount = 13,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product8",
                            Price = 6500.0,
                            Ratings = 5.5,
                            RemoveCount = 6,
                            SalePrice = 1800.0,
                            SalesQuantity = 550,
                            SellerId = 1,
                            StockCount = 1
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6088),
                            Description = "prodcu9",
                            Discount = 17,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = false,
                            IsTop = false,
                            Name = "product9",
                            Price = 7800.0,
                            Ratings = 3.1000000000000001,
                            RemoveCount = 1,
                            SalePrice = 1800.0,
                            SalesQuantity = 25,
                            SellerId = 1,
                            StockCount = 0
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6118),
                            Description = "prodc10u",
                            Discount = 7,
                            IsDeleted = false,
                            IsHomeProduct = true,
                            IsNew = false,
                            IsStock = true,
                            IsTop = false,
                            Name = "product10",
                            Price = 15800.0,
                            Ratings = 3.7999999999999998,
                            RemoveCount = 0,
                            SalePrice = 1800.0,
                            SalesQuantity = 1000,
                            SellerId = 1,
                            StockCount = 65
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Review", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int?>("AppUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6433),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 1,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 2,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6437),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 2,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 3,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6438),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 3,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 4,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6439),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 4,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 5,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6440),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 5,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 6,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6442),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 6,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 7,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6443),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 7,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 8,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6444),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 8,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 9,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6445),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 9,
                            Rate = 2.0
                        },
                        new
                        {
                            Id = 10,
                            AppUserId = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6447),
                            Description = "review",
                            IsDeleted = false,
                            ProductId = 10,
                            Rate = 2.0
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.Seller", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6599),
                            Email = "1",
                            IsDeleted = false,
                            Name = "seller1",
                            Password = "1",
                            SurName = "seller12"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 2, 7, 5, 17, 54, 765, DateTimeKind.Local).AddTicks(6606),
                            Email = "2",
                            IsDeleted = false,
                            Name = "seller2",
                            Password = "2",
                            SurName = "seller122"
                        });
                });

            modelBuilder.Entity("ECommerce.Entity.AppUser", b =>
                {
                    b.HasOne("ECommerce.Entity.Card", "Card")
                        .WithOne("AppUser")
                        .HasForeignKey("ECommerce.Entity.AppUser", "CardId");

                    b.HasOne("ECommerce.Entity.Seller", "Seller")
                        .WithMany("AppUsers")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Card");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ECommerce.Entity.CardItem", b =>
                {
                    b.HasOne("ECommerce.Entity.Card", "Card")
                        .WithMany("CardItems")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ECommerce.Entity.Product", "Product")
                        .WithMany("CardItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Card");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Category", b =>
                {
                    b.HasOne("ECommerce.Entity.Image", "Image")
                        .WithOne("Category")
                        .HasForeignKey("ECommerce.Entity.Category", "ImageId");

                    b.HasOne("ECommerce.Entity.Seller", "Seller")
                        .WithMany("Categories")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Image");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ECommerce.Entity.Image", b =>
                {
                    b.HasOne("ECommerce.Entity.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Order", b =>
                {
                    b.HasOne("ECommerce.Entity.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ECommerce.Entity.Seller", "Seller")
                        .WithMany("Orders")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AppUser");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ECommerce.Entity.OrderItem", b =>
                {
                    b.HasOne("ECommerce.Entity.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ECommerce.Entity.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.Product", b =>
                {
                    b.HasOne("ECommerce.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ECommerce.Entity.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("Seller");
                });

            modelBuilder.Entity("ECommerce.Entity.Review", b =>
                {
                    b.HasOne("ECommerce.Entity.AppUser", "AppUser")
                        .WithMany("Reviews")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ECommerce.Entity.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AppUser");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ECommerce.Entity.AppUser", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ECommerce.Entity.Card", b =>
                {
                    b.Navigation("AppUser");

                    b.Navigation("CardItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ECommerce.Entity.Image", b =>
                {
                    b.Navigation("Category");
                });

            modelBuilder.Entity("ECommerce.Entity.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("ECommerce.Entity.Product", b =>
                {
                    b.Navigation("CardItems");

                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("ECommerce.Entity.Seller", b =>
                {
                    b.Navigation("AppUsers");

                    b.Navigation("Categories");

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
